{"version":3,"sources":["webpack://@d2phap/happla/webpack/universalModuleDefinition","webpack://@d2phap/happla/webpack/bootstrap","webpack://@d2phap/happla/webpack/runtime/define property getters","webpack://@d2phap/happla/webpack/runtime/hasOwnProperty shorthand","webpack://@d2phap/happla/webpack/runtime/make namespace object","webpack://@d2phap/happla/./src/modules/helpers.ts","webpack://@d2phap/happla/./src/modules/Board.ts"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","InterpolationMode","board","boardContent","options","isPointerDown","isMoving","arrowLeftDown","arrowRightDown","arrowUpDown","arrowDownDown","defaultOptions","imageRendering","Pixelated","allowZoom","minZoom","maxZoom","zoomFactor","panOffset","x","y","allowPan","scaleRatio","window","devicePixelRatio","onBeforeContentReady","onContentReady","onBeforeZoomChanged","onAfterZoomChanged","onAfterTransformed","onPanning","onAfterPanned","elBoard","elBoardContent","domMatrix","DOMMatrix","scaleSelf","translateSelf","zoomDistance","bind","moveDistance","startMoving","stopMoving","dpi","updateImageRendering","enable","disable","zoomTo","panTo","applyTransform","waitForContentReady","onMouseWheel","onPointerDown","onPointerUp","onPointerMove","onKeyDown","onKeyUp","style","transformOrigin","touchAction","overflow","e","deltaY","direction","normalizedDeltaY","Math","abs","delta","clientX","clientY","button","setPointerCapture","pointerId","event","f","releasePointerCapture","every","keyDown","Auto","CrispEdges","dx","dy","duration","a","oldZoom","newZoom","min","max","newX","offsetLeft","newY","offsetTop","newDelta","multiplySelf","animationFrame","requestAnimationFrame","cancelAnimationFrame","factor","d","Promise","resolve","transform","toString","transition","setTimeout","undefined","then","addEventListener","passive","removeEventListener","list","querySelectorAll","imgs","Array","from","some","i","complete"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@d2phap/happla\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@d2phap/happla\"] = factory();\n\telse\n\t\troot[\"@d2phap/happla\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nexport interface IRect {\r\n  left: number;\r\n  right: number;\r\n  top: number;\r\n  bottom: number;\r\n}\r\n\r\nexport const pause = (duration: number) => new Promise((resolve) => setTimeout(resolve, duration));\r\n\r\nexport const checkRectanglesIntersection = (rectangle1: IRect, rectangle2: IRect) => !(\r\n  rectangle2.left > rectangle1.right\r\n  || rectangle2.right < rectangle1.left\r\n  || rectangle2.top > rectangle1.bottom\r\n  || rectangle2.bottom < rectangle1.top\r\n);\r\n","import { pause } from './helpers';\r\n\r\nexport type ZoomEventFunction = (zoomFactor: number, x: number, y: number) => void;\r\nexport type TransformEventFunction = (matrix: DOMMatrix) => void;\r\nexport type PanEventFunction = (x: number, y: number) => void;\r\n\r\nexport enum InterpolationMode {\r\n  Pixelated = 'pixelated',\r\n  Auto = 'auto',\r\n  CrispEdges = 'crisp-edges',\r\n}\r\n\r\nexport interface BoardOptions {\r\n  allowZoom?: boolean;\r\n  zoomFactor?: number;\r\n  minZoom?: number;\r\n  maxZoom?: number;\r\n\r\n  allowPan?: boolean;\r\n  panOffset?: { x: number, y: number };\r\n\r\n  imageRendering?: InterpolationMode;\r\n  scaleRatio?: number;\r\n\r\n  onBeforeContentReady?: () => void;\r\n  onContentReady?: () => void;\r\n\r\n  onBeforeZoomChanged?: ZoomEventFunction;\r\n  onAfterZoomChanged?: ZoomEventFunction;\r\n  onAfterTransformed?: TransformEventFunction;\r\n\r\n  onPanning?: PanEventFunction;\r\n  onAfterPanned?: PanEventFunction;\r\n}\r\n\r\nexport class Board {\r\n  private elBoardContent: HTMLElement;\r\n  private elBoard: HTMLElement;\r\n  private domMatrix: DOMMatrix;\r\n  private isPointerDown = false;\r\n\r\n  private animationFrame: number;\r\n  private isMoving = false;\r\n  private arrowLeftDown = false;\r\n  private arrowRightDown = false;\r\n  private arrowUpDown = false;\r\n  private arrowDownDown = false;\r\n\r\n  private options: BoardOptions;\r\n  private defaultOptions: BoardOptions = {\r\n    imageRendering: InterpolationMode.Pixelated,\r\n\r\n    allowZoom: true,\r\n    minZoom: 0.1,\r\n    maxZoom: 150,\r\n    zoomFactor: 1,\r\n    panOffset: { x: 0, y: 0 },\r\n\r\n    allowPan: true,\r\n    scaleRatio: window.devicePixelRatio,\r\n\r\n    onBeforeContentReady: () => {},\r\n    onContentReady: () => {},\r\n\r\n    onBeforeZoomChanged: () => {},\r\n    onAfterZoomChanged: () => {},\r\n    onAfterTransformed: () => {},\r\n\r\n    onPanning: () => {},\r\n    onAfterPanned: () => {},\r\n  };\r\n\r\n  constructor(board: HTMLElement, boardContent: HTMLElement, options?: BoardOptions) {\r\n    this.elBoard = board;\r\n    this.elBoardContent = boardContent;\r\n\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...options || {},\r\n    };\r\n\r\n    this.domMatrix = new DOMMatrix()\r\n      .scaleSelf(this.options.zoomFactor)\r\n      .translateSelf(this.options.panOffset.x, this.options.panOffset.y);\r\n\r\n    this.zoomDistance = this.zoomDistance.bind(this);\r\n    this.moveDistance = this.moveDistance.bind(this);\r\n    this.startMoving = this.startMoving.bind(this);\r\n    this.stopMoving = this.stopMoving.bind(this);\r\n    this.dpi = this.dpi.bind(this);\r\n    this.updateImageRendering = this.updateImageRendering.bind(this);\r\n\r\n    this.enable = this.enable.bind(this);\r\n    this.disable = this.disable.bind(this);\r\n    this.zoomTo = this.zoomTo.bind(this);\r\n    this.panTo = this.panTo.bind(this);\r\n    this.applyTransform = this.applyTransform.bind(this);\r\n    this.waitForContentReady = this.waitForContentReady.bind(this);\r\n\r\n    this.onMouseWheel = this.onMouseWheel.bind(this);\r\n    this.onPointerDown = this.onPointerDown.bind(this);\r\n    this.onPointerUp = this.onPointerUp.bind(this);\r\n    this.onPointerMove = this.onPointerMove.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n\r\n    this.disable();\r\n\r\n    this.elBoardContent.style.transformOrigin = 'top left';\r\n    this.elBoard.style.touchAction = 'none';\r\n    this.elBoard.style.overflow = 'hidden';\r\n\r\n    // emit event onBeforeContentReady\r\n    this.options.onBeforeContentReady();\r\n  }\r\n\r\n  // #region Getters & Setters\r\n  get imageRendering() {\r\n    return this.options.imageRendering;\r\n  }\r\n\r\n  set imageRendering(value: InterpolationMode) {\r\n    this.options.imageRendering = value;\r\n    // this.elBoardContent.style.imageRendering = value;\r\n\r\n    this.updateImageRendering();\r\n  }\r\n\r\n  get scaleRatio() {\r\n    return this.options.scaleRatio;\r\n  }\r\n\r\n  set scaleRatio(value: number) {\r\n    this.options.scaleRatio = value;\r\n  }\r\n\r\n  /**\r\n   * Gets zoom factor after computing device ratio (DPI)\r\n   *\r\n   * @readonly\r\n   * @memberof Board\r\n   */\r\n  get zoomFactor() {\r\n    return this.options.zoomFactor * this.options.scaleRatio;\r\n  }\r\n  // #endregion\r\n\r\n\r\n  // #region Private functions\r\n  private onMouseWheel(e: WheelEvent) {\r\n    // ignore horizontal scroll events\r\n    if (e.deltaY === 0) {\r\n      return;\r\n    }\r\n\r\n    const direction = e.deltaY < 0 ? 'up' : 'down';\r\n    const normalizedDeltaY = 1 + Math.abs(e.deltaY) / 300; // speed\r\n    const delta = direction === 'up' ? normalizedDeltaY : 1 / normalizedDeltaY;\r\n\r\n    this.zoomDistance(delta, e.clientX, e.clientY);\r\n  }\r\n\r\n  private onPointerDown(e: PointerEvent) {\r\n    // ignore right clicks\r\n    if (e.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    this.elBoard.setPointerCapture(e.pointerId);\r\n    this.isPointerDown = true;\r\n\r\n    // We get the pointer position on click so we can get the value once the user starts to drag\r\n    this.options.panOffset.x = e.clientX;\r\n    this.options.panOffset.y = e.clientY;\r\n  }\r\n\r\n  private onPointerMove(event: PointerEvent) {\r\n    // Only run this function if the pointer is down\r\n    if (!this.isPointerDown) {\r\n      return;\r\n    }\r\n\r\n    this.moveDistance(\r\n      event.clientX - this.options.panOffset.x,\r\n      event.clientY - this.options.panOffset.y,\r\n    );\r\n\r\n    this.options.panOffset.x = event.clientX;\r\n    this.options.panOffset.y = event.clientY;\r\n\r\n    this.options.onPanning(this.domMatrix.e, this.domMatrix.f);\r\n  }\r\n\r\n  private onPointerUp(e: PointerEvent) {\r\n    if (!this.isPointerDown) {\r\n      return;\r\n    }\r\n\r\n    this.elBoard.releasePointerCapture(e.pointerId);\r\n    this.isPointerDown = false;\r\n\r\n    this.options.panOffset.x += e.clientX - this.options.panOffset.x;\r\n    this.options.panOffset.y += e.clientY - this.options.panOffset.y;\r\n\r\n    this.options.onAfterPanned(this.domMatrix.e, this.domMatrix.f);\r\n  }\r\n\r\n  private onKeyDown(event: KeyboardEvent) {\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n        this.arrowLeftDown = true;\r\n        if (!this.isMoving) {\r\n          this.isMoving = true;\r\n          this.startMoving();\r\n        }\r\n        break;\r\n      case 'ArrowUp':\r\n        this.arrowUpDown = true;\r\n        if (!this.isMoving) {\r\n          this.isMoving = true;\r\n          this.startMoving();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        this.arrowRightDown = true;\r\n        if (!this.isMoving) {\r\n          this.isMoving = true;\r\n          this.startMoving();\r\n        }\r\n        break;\r\n      case 'ArrowDown':\r\n        this.arrowDownDown = true;\r\n        if (!this.isMoving) {\r\n          this.isMoving = true;\r\n          this.startMoving();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private onKeyUp(event: KeyboardEvent) {\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n        this.arrowLeftDown = false;\r\n        break;\r\n      case 'ArrowUp':\r\n        this.arrowUpDown = false;\r\n        break;\r\n      case 'ArrowRight':\r\n        this.arrowRightDown = false;\r\n        break;\r\n      case 'ArrowDown':\r\n        this.arrowDownDown = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if ([\r\n      this.arrowLeftDown,\r\n      this.arrowUpDown,\r\n      this.arrowRightDown,\r\n      this.arrowDownDown,\r\n    ].every((keyDown) => !keyDown)) {\r\n      this.stopMoving();\r\n    }\r\n  }\r\n\r\n  private dpi(value: number) {\r\n    return value / this.options.scaleRatio;\r\n  }\r\n\r\n  private updateImageRendering() {\r\n    switch (this.imageRendering) {\r\n      case InterpolationMode.Auto:\r\n        if (this.zoomFactor <= 1) {\r\n          this.elBoardContent.style.imageRendering = InterpolationMode.CrispEdges;\r\n        }\r\n        else {\r\n          this.elBoardContent.style.imageRendering = InterpolationMode.Pixelated;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        this.elBoardContent.style.imageRendering = this.imageRendering;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private moveDistance(x = 0, y = 0) {\r\n    // Update the transform coordinates with the distance from origin and current position\r\n    this.domMatrix.e += x;\r\n    this.domMatrix.f += y;\r\n\r\n    this.options.onPanning(this.domMatrix.e, this.domMatrix.f);\r\n\r\n    this.applyTransform();\r\n  }\r\n\r\n  private zoomDistance(delta: number, dx?: number, dy?: number, duration?: number) {\r\n    if (!this.options.allowZoom) {\r\n      return;\r\n    }\r\n\r\n    // update the current zoom factor\r\n    this.options.zoomFactor = this.domMatrix.a;\r\n\r\n    const oldZoom = this.options.zoomFactor;\r\n    const newZoom = oldZoom * delta;\r\n\r\n    // raise event onBeforeZoomChanged\r\n    this.options.onBeforeZoomChanged(this.zoomFactor, this.domMatrix.e, this.domMatrix.f);\r\n\r\n    // restrict the zoom factor\r\n    this.options.zoomFactor = Math.min(\r\n      Math.max(this.options.minZoom, newZoom),\r\n      this.options.maxZoom,\r\n    );\r\n\r\n    const newX = (dx ?? this.elBoard.offsetLeft) - this.elBoard.offsetLeft;\r\n    const newY = (dy ?? this.elBoard.offsetTop) - this.elBoard.offsetTop;\r\n    let newDelta = delta;\r\n\r\n    // check zoom -> maxZoom\r\n    if (newZoom * this.options.scaleRatio > this.options.maxZoom) {\r\n      newDelta = this.dpi(this.options.maxZoom) / oldZoom;\r\n      this.options.zoomFactor = this.dpi(this.options.maxZoom);\r\n    }\r\n\r\n    // check zoom -> minZoom\r\n    else if (newZoom * this.options.scaleRatio < this.options.minZoom) {\r\n      newDelta = this.dpi(this.options.minZoom) / oldZoom;\r\n      this.options.zoomFactor = this.dpi(this.options.minZoom);\r\n    }\r\n\r\n    this.domMatrix = new DOMMatrix()\r\n      .translateSelf(newX, newY)\r\n      .scaleSelf(newDelta)\r\n      .translateSelf(-newX, -newY)\r\n      .multiplySelf(this.domMatrix);\r\n\r\n    // raise event onAfterZoomChanged\r\n    this.options.onAfterZoomChanged(this.zoomFactor, this.domMatrix.e, this.domMatrix.f);\r\n\r\n\r\n    this.updateImageRendering();\r\n    this.applyTransform(duration);\r\n  }\r\n\r\n  private startMoving() {\r\n    const speed = 20;\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    if (this.arrowLeftDown && !this.arrowRightDown) {\r\n      x = speed;\r\n    } else if (!this.arrowLeftDown && this.arrowRightDown) {\r\n      x = -speed;\r\n    }\r\n\r\n    if (this.arrowUpDown && !this.arrowDownDown) {\r\n      y = speed;\r\n    } else if (!this.arrowUpDown && this.arrowDownDown) {\r\n      y = -speed;\r\n    }\r\n\r\n    this.moveDistance(x, y);\r\n    this.animationFrame = requestAnimationFrame(this.startMoving);\r\n  }\r\n\r\n  private stopMoving() {\r\n    cancelAnimationFrame(this.animationFrame);\r\n    this.isMoving = false;\r\n  }\r\n  // #endregion\r\n\r\n\r\n  // #region Public functions\r\n  public async panTo(x: number, y: number, duration?: number) {\r\n    this.domMatrix.e = x;\r\n    this.domMatrix.f = y;\r\n\r\n    await this.applyTransform(duration);\r\n  }\r\n\r\n  public async zoomTo(factor: number, x?: number, y?: number, duration?: number) {\r\n    // restrict the zoom factor\r\n    this.options.zoomFactor = Math.min(\r\n      Math.max(this.options.minZoom, this.dpi(factor)),\r\n      this.options.maxZoom,\r\n    );\r\n\r\n    // raise event onBeforeZoomChanged\r\n    this.options.onBeforeZoomChanged(this.zoomFactor, this.domMatrix.e, this.domMatrix.f);\r\n\r\n    // apply scale and translate value\r\n    this.domMatrix.a = this.options.zoomFactor;\r\n    this.domMatrix.d = this.options.zoomFactor;\r\n    this.domMatrix.e = x || 0;\r\n    this.domMatrix.f = y || 0;\r\n\r\n    // raise event onAfterZoomChanged\r\n    this.options.onAfterZoomChanged(this.zoomFactor, this.domMatrix.e, this.domMatrix.f);\r\n\r\n    await this.applyTransform(duration);\r\n  }\r\n\r\n  public applyTransform(duration: number = 0) {\r\n    return new Promise((resolve) => {\r\n      this.elBoardContent.style.transform = `${this.domMatrix.toString()}`;\r\n\r\n      // apply animation\r\n      if (duration > 0) {\r\n        const transition = `transform ${duration}ms ease, opacity ${duration}ms ease`;\r\n        this.elBoardContent.style.transition = transition;\r\n\r\n        setTimeout(resolve, duration);\r\n      }\r\n      else {\r\n        this.elBoardContent.style.transition = '';\r\n        resolve(undefined);\r\n      }\r\n    })\r\n      .then(() => {\r\n        // raise event\r\n        this.options.onAfterTransformed(this.domMatrix);\r\n      });\r\n  }\r\n\r\n  public enable() {\r\n    this.applyTransform();\r\n\r\n    this.elBoard.addEventListener('wheel', this.onMouseWheel, { passive: true });\r\n\r\n    this.elBoard.addEventListener('pointerdown', this.onPointerDown);\r\n    this.elBoard.addEventListener('pointerup', this.onPointerUp);\r\n    this.elBoard.addEventListener('pointerleave', this.onPointerUp);\r\n    this.elBoard.addEventListener('pointermove', this.onPointerMove);\r\n\r\n    this.elBoard.addEventListener('keydown', this.onKeyDown);\r\n    this.elBoard.addEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  public disable() {\r\n    this.elBoard.removeEventListener('mousewheel', this.onMouseWheel);\r\n\r\n    this.elBoard.removeEventListener('pointerdown', this.onPointerDown);\r\n    this.elBoard.removeEventListener('pointerup', this.onPointerUp);\r\n    this.elBoard.removeEventListener('pointerleave', this.onPointerUp);\r\n    this.elBoard.removeEventListener('pointermove', this.onPointerMove);\r\n\r\n    this.elBoard.removeEventListener('keydown', this.onKeyDown);\r\n    this.elBoard.removeEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  public async waitForContentReady() {\r\n    const list = this.elBoardContent.querySelectorAll('img');\r\n    const imgs = Array.from(list);\r\n\r\n    while (imgs.some((i) => !i.complete)) {\r\n      // eslint-disable-next-line\r\n      await pause(10);\r\n    }\r\n\r\n    // emit event onContentReady\r\n    this.options.onContentReady();\r\n  }\r\n  // #endregion\r\n}\r\n"],"sourceRoot":""}